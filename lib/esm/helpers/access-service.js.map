{"version":3,"file":"access-service.js","names":["AccessService","verbose","constructor","fetch","makePublic","resourceURL","accessRights","read","append","write","control","setResourceAccess","ResourceType","CONTAINER","makeFilePublic","FILE","type","userWebID","resourceWithAcl","DATASET","getSolidDatasetWithAcl","getFileWithAcl","resourceAcl","getResourceAcl","updatedAcl","undefined","setPublicResourceAccess","setAgentResourceAccess","newAccess","saveAclFor","logAccessInfo","datasetWithAcl","hasResourceAcl","hasAccessibleAcl","Error","hasFallbackAcl","createAclFromFallbackAcl","access","resource","agent","console","log","JSON","stringify","controlRead","controlWrite"],"sources":["../../../src/helpers/access-service.ts"],"sourcesContent":["// Import from \"@inrupt/solid-client\"\r\nimport {\r\n    getSolidDatasetWithAcl,\r\n    setPublicResourceAccess,\r\n    hasResourceAcl,\r\n    hasAccessibleAcl,\r\n    getResourceAcl,\r\n    createAclFromFallbackAcl,\r\n    hasFallbackAcl,\r\n    saveAclFor,\r\n    setAgentResourceAccess,\r\n    getFileWithAcl\r\n} from \"@inrupt/solid-client\";\r\nimport { AccessRights, ResourceType } from \"./BaseDefinitions\";\r\n\r\nexport default class AccessService{\r\n\r\n    public fetch;\r\n    public verbose: boolean = false;\r\n\r\n    constructor(fetch: any, verbose: boolean = false){\r\n        this.fetch = fetch;\r\n        this.verbose = verbose;\r\n    }\r\n\r\n    // Make a resource public\r\n    public async makePublic(resourceURL: string) {\r\n        // I would by default not grant the public appending rights...\r\n        const accessRights: AccessRights = { read: true, append: false, write: false, control: false };\r\n        return this.setResourceAccess(resourceURL, accessRights, ResourceType.CONTAINER);\r\n    }\r\n\r\n    public async makeFilePublic(resourceURL: string) {\r\n        const accessRights: AccessRights = { read: true, append: true, write: false, control: false };\r\n        return this.setResourceAccess(resourceURL, accessRights, ResourceType.FILE);\r\n    }\r\n\r\n    public async setResourceAccess(resourceURL: string, accessRights: AccessRights, type: ResourceType, userWebID?: string){\r\n\r\n        // Get resource with ACL\r\n        let resourceWithAcl: any\r\n        if(type == ResourceType.DATASET || type == ResourceType.CONTAINER){\r\n            resourceWithAcl = await getSolidDatasetWithAcl(resourceURL, {fetch: this.fetch});\r\n        }\r\n\r\n        if(type == ResourceType.FILE){\r\n            resourceWithAcl = await getFileWithAcl(resourceURL, {fetch: this.fetch});\r\n        }\r\n        \r\n        // Get resource ACL\r\n        const resourceAcl = await this.getResourceAcl(resourceWithAcl);\r\n        \r\n        // Update ACL access\r\n        let updatedAcl;\r\n\r\n        // If no user webID provided, set the public access\r\n        if(!userWebID || userWebID == undefined){\r\n            updatedAcl = setPublicResourceAccess(\r\n                resourceAcl,\r\n                accessRights,\r\n            );\r\n        }\r\n        \r\n        // If user webID provided, set the access for that particular user\r\n        else{\r\n            updatedAcl = setAgentResourceAccess(\r\n                resourceAcl,\r\n                userWebID,\r\n                accessRights,\r\n            );\r\n        }\r\n\r\n        // Save ACL\r\n        const newAccess = await saveAclFor(resourceWithAcl, updatedAcl, {fetch: this.fetch});\r\n\r\n        this.verbose && this.logAccessInfo(accessRights, resourceURL);\r\n\r\n        return newAccess;\r\n\r\n    }\r\n\r\n    // Obtain the SolidDataset's own ACL, if available,\r\n    // or initialise a new one, if possible:\r\n    private async getResourceAcl(datasetWithAcl: any){\r\n\r\n        let resourceAcl;\r\n        if (!hasResourceAcl(datasetWithAcl)) {\r\n        if (!hasAccessibleAcl(datasetWithAcl)) {\r\n            throw new Error(\r\n            \"The current user does not have permission to change access rights to this Resource.\"\r\n            );\r\n        }\r\n        if (!hasFallbackAcl(datasetWithAcl)) {\r\n            throw new Error(\r\n            \"The current user does not have permission to see who currently has access to this Resource.\"\r\n            );\r\n            // Alternatively, initialise a new empty ACL as follows,\r\n            // but be aware that if you do not give someone Control access,\r\n            // **nobody will ever be able to change Access permissions in the future**:\r\n            // resourceAcl = createAcl(myDatasetWithAcl);\r\n        }\r\n            resourceAcl = createAclFromFallbackAcl(datasetWithAcl);\r\n        } else {\r\n            resourceAcl = getResourceAcl(datasetWithAcl);\r\n        }\r\n\r\n        return resourceAcl;\r\n    }\r\n\r\n    private logAccessInfo(access: any, resource: string, agent: string = \"\"){\r\n        if (access === null) {\r\n            console.log(\"Could not load access details for this Resource.\");\r\n        } else {\r\n            if(!agent) console.log(`${agent}'s Access:: `, JSON.stringify(access));\r\n            else console.log(`Public Access:: `, JSON.stringify(access));\r\n            console.log(\"...\", agent, (access.read ? 'CAN' : 'CANNOT'), \"read the Resource\", resource);\r\n            console.log(\"...\", agent, (access.append ? 'CAN' : 'CANNOT'), \"add data to the Resource\", resource);\r\n            console.log(\"...\", agent, (access.write ? 'CAN' : 'CANNOT'), \"change data in the Resource\", resource);\r\n\r\n            if ('controlRead' in access){\r\n                console.log(\"...\", agent, (access.controlRead ? 'CAN' : 'CANNOT'), \"see access to the Resource\", resource);\r\n                console.log(\"...\", agent, (access.controlWrite ? 'CAN' : 'CANNOT'), \"change access to the Resource\", resource);\r\n            }else{\r\n                console.log(\"...\", agent, (access.control ? 'CAN' : 'CANNOT'), \"change access to the Resource\", resource);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}"],"mappings":";;;;;;;AACA;;AAYA;;AAbA;AAee,MAAMA,aAAN,CAAmB;EAGvBC,OAAO,GAAY,KAAZ;;EAEdC,WAAW,CAACC,KAAD,EAAaF,OAAgB,GAAG,KAAhC,EAAsC;IAC7C,KAAKE,KAAL,GAAaA,KAAb;IACA,KAAKF,OAAL,GAAeA,OAAf;EACH,CAR6B,CAU9B;;;EACuB,MAAVG,UAAU,CAACC,WAAD,EAAsB;IACzC;IACA,MAAMC,YAA0B,GAAG;MAAEC,IAAI,EAAE,IAAR;MAAcC,MAAM,EAAE,KAAtB;MAA6BC,KAAK,EAAE,KAApC;MAA2CC,OAAO,EAAE;IAApD,CAAnC;IACA,OAAO,KAAKC,iBAAL,CAAuBN,WAAvB,EAAoCC,YAApC,EAAkDM,6BAAA,CAAaC,SAA/D,CAAP;EACH;;EAE0B,MAAdC,cAAc,CAACT,WAAD,EAAsB;IAC7C,MAAMC,YAA0B,GAAG;MAAEC,IAAI,EAAE,IAAR;MAAcC,MAAM,EAAE,IAAtB;MAA4BC,KAAK,EAAE,KAAnC;MAA0CC,OAAO,EAAE;IAAnD,CAAnC;IACA,OAAO,KAAKC,iBAAL,CAAuBN,WAAvB,EAAoCC,YAApC,EAAkDM,6BAAA,CAAaG,IAA/D,CAAP;EACH;;EAE6B,MAAjBJ,iBAAiB,CAACN,WAAD,EAAsBC,YAAtB,EAAkDU,IAAlD,EAAsEC,SAAtE,EAAyF;IAEnH;IACA,IAAIC,eAAJ;;IACA,IAAGF,IAAI,IAAIJ,6BAAA,CAAaO,OAArB,IAAgCH,IAAI,IAAIJ,6BAAA,CAAaC,SAAxD,EAAkE;MAC9DK,eAAe,GAAG,MAAM,IAAAE,mCAAA,EAAuBf,WAAvB,EAAoC;QAACF,KAAK,EAAE,KAAKA;MAAb,CAApC,CAAxB;IACH;;IAED,IAAGa,IAAI,IAAIJ,6BAAA,CAAaG,IAAxB,EAA6B;MACzBG,eAAe,GAAG,MAAM,IAAAG,2BAAA,EAAehB,WAAf,EAA4B;QAACF,KAAK,EAAE,KAAKA;MAAb,CAA5B,CAAxB;IACH,CAVkH,CAYnH;;;IACA,MAAMmB,WAAW,GAAG,MAAM,KAAKC,cAAL,CAAoBL,eAApB,CAA1B,CAbmH,CAenH;;IACA,IAAIM,UAAJ,CAhBmH,CAkBnH;;IACA,IAAG,CAACP,SAAD,IAAcA,SAAS,IAAIQ,SAA9B,EAAwC;MACpCD,UAAU,GAAG,IAAAE,oCAAA,EACTJ,WADS,EAEThB,YAFS,CAAb;IAIH,CALD,CAOA;IAPA,KAQI;MACAkB,UAAU,GAAG,IAAAG,mCAAA,EACTL,WADS,EAETL,SAFS,EAGTX,YAHS,CAAb;IAKH,CAjCkH,CAmCnH;;;IACA,MAAMsB,SAAS,GAAG,MAAM,IAAAC,uBAAA,EAAWX,eAAX,EAA4BM,UAA5B,EAAwC;MAACrB,KAAK,EAAE,KAAKA;IAAb,CAAxC,CAAxB;IAEA,KAAKF,OAAL,IAAgB,KAAK6B,aAAL,CAAmBxB,YAAnB,EAAiCD,WAAjC,CAAhB;IAEA,OAAOuB,SAAP;EAEH,CAhE6B,CAkE9B;EACA;;;EAC4B,MAAdL,cAAc,CAACQ,cAAD,EAAqB;IAE7C,IAAIT,WAAJ;;IACA,IAAI,CAAC,IAAAU,2BAAA,EAAeD,cAAf,CAAL,EAAqC;MACrC,IAAI,CAAC,IAAAE,6BAAA,EAAiBF,cAAjB,CAAL,EAAuC;QACnC,MAAM,IAAIG,KAAJ,CACN,qFADM,CAAN;MAGH;;MACD,IAAI,CAAC,IAAAC,2BAAA,EAAeJ,cAAf,CAAL,EAAqC;QACjC,MAAM,IAAIG,KAAJ,CACN,6FADM,CAAN,CADiC,CAIjC;QACA;QACA;QACA;MACH;;MACGZ,WAAW,GAAG,IAAAc,qCAAA,EAAyBL,cAAzB,CAAd;IACH,CAhBD,MAgBO;MACHT,WAAW,GAAG,IAAAC,2BAAA,EAAeQ,cAAf,CAAd;IACH;;IAED,OAAOT,WAAP;EACH;;EAEOQ,aAAa,CAACO,MAAD,EAAcC,QAAd,EAAgCC,KAAa,GAAG,EAAhD,EAAmD;IACpE,IAAIF,MAAM,KAAK,IAAf,EAAqB;MACjBG,OAAO,CAACC,GAAR,CAAY,kDAAZ;IACH,CAFD,MAEO;MACH,IAAG,CAACF,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAa,GAAEF,KAAM,cAArB,EAAoCG,IAAI,CAACC,SAAL,CAAeN,MAAf,CAApC,EAAX,KACKG,OAAO,CAACC,GAAR,CAAa,kBAAb,EAAgCC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAhC;MACLG,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAAC9B,IAAP,GAAc,KAAd,GAAsB,QAAjD,EAA4D,mBAA5D,EAAiF+B,QAAjF;MACAE,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAAC7B,MAAP,GAAgB,KAAhB,GAAwB,QAAnD,EAA8D,0BAA9D,EAA0F8B,QAA1F;MACAE,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAAC5B,KAAP,GAAe,KAAf,GAAuB,QAAlD,EAA6D,6BAA7D,EAA4F6B,QAA5F;;MAEA,IAAI,iBAAiBD,MAArB,EAA4B;QACxBG,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAACO,WAAP,GAAqB,KAArB,GAA6B,QAAxD,EAAmE,4BAAnE,EAAiGN,QAAjG;QACAE,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAACQ,YAAP,GAAsB,KAAtB,GAA8B,QAAzD,EAAoE,+BAApE,EAAqGP,QAArG;MACH,CAHD,MAGK;QACDE,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,KAAnB,EAA2BF,MAAM,CAAC3B,OAAP,GAAiB,KAAjB,GAAyB,QAApD,EAA+D,+BAA/D,EAAgG4B,QAAhG;MACH;IAEJ;EACJ;;AAhH6B"}