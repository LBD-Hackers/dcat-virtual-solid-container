{"version":3,"file":"functions.js","names":["QueryEngine","require","N3","DataFactory","namedNode","literal","defaultGraph","quad","variable","translate","toSparql","generateSession","options","webId","email","password","name","idp","endsWith","response","fetch","method","headers","body","JSON","stringify","id","secret","json","tokenUrl","authString","encodeURIComponent","dpopKey","generateDpopKeyPair","r","authorization","Buffer","from","toString","dpop","createDpopHeader","access_token","authFetch","buildAuthenticatedFetch","info","isLoggedIn","error","console","log","extract","jsonld","uri","Object","assign","filter","i","prefixes","inference","myEngine","registries","store","Promise","resolve","reject","start","Date","q","quadStream","queryQuads","sources","on","res","subject","predicate","value","object","addQuad","err","duration","getTime","streamToString","stream","chunks","chunk","push","concat","query","asStream","variables","mutateQuery","result","data","resultToString","parse","findLowerLevel","obj","type","bgp","input","translation","usedVariables","Set","aliasNumber","aliases","pattern","patterns","item","keys","termType","has","newVName","newV","add","forEach","alias","newPattern","Array"],"sources":["../../../src/helpers/functions.ts"],"sourcesContent":["import fetch from 'cross-fetch';\r\nimport { createDpopHeader, generateDpopKeyPair, buildAuthenticatedFetch, getWebidFromTokenPayload} from '@inrupt/solid-client-authn-core';\r\nimport {v4} from 'uuid' \r\nimport { TokenSession } from './interfaces';\r\n\r\nconst QueryEngine = require('@comunica/query-sparql').QueryEngine;\r\nconst N3 = require('n3');\r\nconst { DataFactory } = N3;\r\nconst { namedNode, literal, defaultGraph, quad, variable } = DataFactory;\r\nconst {translate, toSparql} = require(\"sparqlalgebrajs\")\r\n\r\n\r\nexport async function generateSession(options: any, webId: string): Promise<TokenSession> {\r\n  try {\r\n      let {email, password, name, idp} = options\r\n      if (!idp.endsWith(\"/\")) idp += '/'\r\n      const response = await fetch(`${idp}idp/credentials/`, {\r\n          method: 'POST',\r\n          headers: { 'content-type': 'application/json' },\r\n          body: JSON.stringify({ email, password, name }),\r\n      });\r\n  \r\n      const {id, secret}= await response.json();\r\n      const tokenUrl = `${idp}.oidc/token`;\r\n      const authString = `${encodeURIComponent(id)}:${encodeURIComponent(secret)}`;\r\n      const dpopKey = await generateDpopKeyPair();\r\n      const r = await fetch(tokenUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n              // The header needs to be in base64 encoding.\r\n              authorization: `Basic ${Buffer.from(authString).toString('base64')}`,\r\n              'content-type': 'application/x-www-form-urlencoded',\r\n              dpop: await createDpopHeader(tokenUrl, 'POST', dpopKey),\r\n          },\r\n          body: 'grant_type=client_credentials&scope=webid',\r\n      });\r\n      const {access_token} = await r.json();\r\n      \r\n      const authFetch = await buildAuthenticatedFetch(fetch, access_token, { dpopKey });\r\n\r\n      return {fetch: authFetch, info: {webId, isLoggedIn: true}}\r\n\r\n  } catch (error) {\r\n      console.log('error', error)\r\n      throw error\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction extract(jsonld: object[], uri: string) {\r\n  return Object.assign({}, ...jsonld.filter((i) => i[\"@id\"] === uri));\r\n}\r\n\r\nconst prefixes = `\r\nprefix owl: <http://www.w3.org/2002/07/owl#> \r\nprefix beo: <http://pi.pauwel.be/voc/buildingelement#>\r\nprefix props: <http://example.org/props#> \r\nprefix lbds: <https://w3id.org/lbdserver#>\r\nprefix schema: <http://schema.org/>\r\n`\r\n\r\nfunction inference(myEngine, { registries, fetch, store }): Promise<void> {\r\n  return new Promise(async (resolve, reject) => {\r\n    const start = new Date()\r\n      const q = prefixes + `\r\n      CONSTRUCT {\r\n       ?s1 owl:sameAs ?s2 .\r\n       ?s2 owl:sameAs ?s1 .\r\n      } WHERE {\r\n          {?concept1 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s1 .\r\n          ?concept2 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s2 .\r\n          ?concept1 owl:sameAs ?concept2 .} UNION {\r\n            ?concept1 lbds:hasReference/lbds:hasIdentifier/<https://w3id.org/lbdserver#value> ?s1, ?s2 .\r\n          }\r\n          FILTER(isIRI(?s1) && isIRI(?s2))\r\n          FILTER(?s1 != ?s2)\r\n      }`\r\n      const quadStream = await myEngine.queryQuads(q, {\r\n          sources: registries,\r\n          fetch\r\n      });\r\n\r\n      quadStream.on('data', (res) => {\r\n        // console.log('res.subject, res.object.id', res.subject.id, res.object.id)\r\n            const q = quad(\r\n                namedNode(res.subject.id),\r\n                namedNode(res.predicate.value),\r\n                namedNode(res.object.id),\r\n                defaultGraph()\r\n            )\r\n            store.addQuad(q)\r\n          \r\n\r\n      });\r\n\r\n      quadStream.on('error', (err) => {\r\n        reject(err)\r\n    });\r\n\r\n      quadStream.on('end', () => {\r\n        const duration = new Date().getTime() - start.getTime()\r\n        console.log('duration inference', duration)\r\n          resolve()\r\n      })\r\n  })\r\n}\r\n\r\nfunction streamToString (stream): Promise<string> {\r\n  const chunks = [];\r\n  return new Promise((resolve, reject) => {\r\n    stream.on('data', (chunk) => chunks.push(Buffer.from(chunk)));\r\n    stream.on('error', (err) => reject(err));\r\n    stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\r\n  })\r\n}\r\n\r\nasync function query(q, options) {\r\n      let { sources, fetch, store, registries, asStream} = options\r\n      const {query, variables } = await mutateQuery(q)\r\n\r\n      // const newQ = prefixes + \"Select * where {?s1 owl:sameAs ?s2} \"\r\n      const myEngine = new QueryEngine();\r\n      // if (!store) store = new N3.Store();\r\n      \r\n      // await inference(myEngine, { registries, fetch, store })\r\n      const result = await myEngine.query(query, { sources: [...sources, ...registries], fetch })\r\n      const { data } = await myEngine.resultToString(result,\r\n          'application/sparql-results+json');\r\n      if (asStream) {\r\n          return data\r\n      } else {\r\n          return JSON.parse(await streamToString(data))\r\n      }\r\n}\r\n\r\nfunction findLowerLevel(obj, variables) {\r\n  if (!variables) variables = obj.variables\r\n  if (obj.type === \"bgp\") {\r\n      return {bgp: obj, variables}\r\n  } else {\r\n      return findLowerLevel(obj.input, variables)\r\n  }\r\n}\r\n\r\nasync function mutateQuery(query) {\r\n  const translation = translate(query);\r\n  const {bgp, variables} = findLowerLevel(translation, translation.variables)\r\n  const usedVariables = new Set()\r\n  let aliasNumber = 1\r\n  let aliases = {}\r\n  for (const pattern of bgp.patterns) {\r\n      for (const item of Object.keys(pattern)) {\r\n       if (pattern[item].termType === \"Variable\") {\r\n          if (usedVariables.has(pattern[item])) {\r\n              const newVName = `${pattern[item].value}_alias${aliasNumber}`\r\n              if (!aliases[pattern[item].value]) aliases[pattern[item].value] = []\r\n\r\n              aliases[pattern[item].value].push(newVName)\r\n              aliasNumber += 1\r\n              const newV = {termType: \"Variable\", value: newVName}\r\n              pattern[item] = newV\r\n          }\r\n          usedVariables.add(pattern[item])\r\n       }\r\n         \r\n      }\r\n  }\r\n  Object.keys(aliases).forEach(item => {\r\n      aliases[item].forEach(alias => {\r\n          const newPattern = quad(\r\n              variable(item),\r\n              namedNode(\"http://www.w3.org/2002/07/owl#sameAs\"),\r\n              variable(alias),\r\n              defaultGraph()\r\n          )\r\n          bgp.patterns.push(newPattern)\r\n      })\r\n  })\r\n  const q = {type: \"project\", input: {type: \"bgp\", patterns: bgp.patterns}, variables: Array.from(usedVariables)}\r\n  return {query: toSparql(q), variables: Array.from(usedVariables)}\r\n}\r\n\r\nexport { extract, streamToString, query };\r\n"],"mappings":"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"}